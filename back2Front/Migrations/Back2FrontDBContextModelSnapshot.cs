// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back2Front.Services;

namespace back2Front.Migrations
{
    [DbContext(typeof(Back2FrontDBContext))]
    partial class Back2FrontDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("back2Front.Models.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("SecteurId")
                        .HasColumnType("int");

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<string>("complement")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("rue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SecteurId");

                    b.HasIndex("StructureId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("back2Front.Models.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CategorieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Debut")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Fin")
                        .HasColumnType("datetime");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ProjetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("ProjetId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("back2Front.Models.AgendaCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AgendaCategories");
                });

            modelBuilder.Entity("back2Front.Models.Commentaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AdresseId")
                        .HasColumnType("int");

                    b.Property<int?>("AgendaId")
                        .HasColumnType("int");

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int?>("DepenseId")
                        .HasColumnType("int");

                    b.Property<string>("GrosTitre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjetId")
                        .HasColumnType("int");

                    b.Property<string>("ReviewText")
                        .IsRequired()
                        .HasColumnType("varchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<int?>("TelephoneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("AgendaId");

                    b.HasIndex("BookId");

                    b.HasIndex("DepenseId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProjetId");

                    b.HasIndex("StructureId");

                    b.HasIndex("TelephoneId");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("back2Front.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Civlite")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Titre")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("back2Front.Models.ContactAdresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdresseId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("ContactId");

                    b.ToTable("ContactAdresses");
                });

            modelBuilder.Entity("back2Front.Models.Depense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Categorie")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ProjetId")
                        .HasColumnType("int");

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<int>("Taux")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.HasIndex("StructureId");

                    b.ToTable("Depenses");
                });

            modelBuilder.Entity("back2Front.Models.DepenseCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DepenseCategories");
                });

            modelBuilder.Entity("back2Front.Models.Facturation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ProjetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjetId");

                    b.ToTable("Facturations");
                });

            modelBuilder.Entity("back2Front.Models.FacturationCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FacturationCategories");
                });

            modelBuilder.Entity("back2Front.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime");

                    b.Property<int?>("FacturationId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("FacturationId");

                    b.HasIndex("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("back2Front.Models.Projet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StructureId");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("back2Front.Models.ProjetContact", b =>
                {
                    b.Property<int>("ProjetId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("ProjetId", "ContactId");

                    b.HasIndex("ContactId");

                    b.ToTable("ProjetContacts");
                });

            modelBuilder.Entity("back2Front.Models.Secteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("StructureId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StructureId");

                    b.ToTable("Secteurs");
                });

            modelBuilder.Entity("back2Front.Models.Structure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Structures");
                });

            modelBuilder.Entity("back2Front.Models.StructureContact", b =>
                {
                    b.Property<int>("StructureId")
                        .HasColumnType("int");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.HasKey("StructureId", "ContactId");

                    b.HasIndex("ContactId");

                    b.ToTable("StructureContacts");
                });

            modelBuilder.Entity("back2Front.Models.Taux", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tauxes");
                });

            modelBuilder.Entity("back2Front.Models.Telephone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasColumnType("text");

                    b.Property<int>("PhoneType")
                        .HasColumnType("int");

                    b.Property<int?>("SecteurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SecteurId");

                    b.ToTable("Telephones");
                });

            modelBuilder.Entity("back2Front.Models.Adresse", b =>
                {
                    b.HasOne("back2Front.Models.Secteur", null)
                        .WithMany("Adresses")
                        .HasForeignKey("SecteurId");

                    b.HasOne("back2Front.Models.Structure", null)
                        .WithMany("Adresses")
                        .HasForeignKey("StructureId");
                });

            modelBuilder.Entity("back2Front.Models.Agenda", b =>
                {
                    b.HasOne("back2Front.Models.AgendaCategorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId");

                    b.HasOne("back2Front.Models.Projet", null)
                        .WithMany("Agenda")
                        .HasForeignKey("ProjetId");
                });

            modelBuilder.Entity("back2Front.Models.Commentaire", b =>
                {
                    b.HasOne("back2Front.Models.Adresse", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("AdresseId");

                    b.HasOne("back2Front.Models.Agenda", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("AgendaId");

                    b.HasOne("back2Front.Models.Contact", "Book")
                        .WithMany("Commentaires")
                        .HasForeignKey("BookId");

                    b.HasOne("back2Front.Models.Depense", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("DepenseId");

                    b.HasOne("back2Front.Models.Item", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("ItemId");

                    b.HasOne("back2Front.Models.Projet", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("ProjetId");

                    b.HasOne("back2Front.Models.Structure", "Structure")
                        .WithMany("Commentaires")
                        .HasForeignKey("StructureId");

                    b.HasOne("back2Front.Models.Telephone", null)
                        .WithMany("Commentaires")
                        .HasForeignKey("TelephoneId");
                });

            modelBuilder.Entity("back2Front.Models.ContactAdresse", b =>
                {
                    b.HasOne("back2Front.Models.Adresse", "Adrresse")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back2Front.Models.Structure", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back2Front.Models.Depense", b =>
                {
                    b.HasOne("back2Front.Models.Projet", null)
                        .WithMany("Depenses")
                        .HasForeignKey("ProjetId");

                    b.HasOne("back2Front.Models.Structure", "Structure")
                        .WithMany()
                        .HasForeignKey("StructureId");
                });

            modelBuilder.Entity("back2Front.Models.Facturation", b =>
                {
                    b.HasOne("back2Front.Models.Projet", null)
                        .WithMany("Facturations")
                        .HasForeignKey("ProjetId");
                });

            modelBuilder.Entity("back2Front.Models.Item", b =>
                {
                    b.HasOne("back2Front.Models.Facturation", null)
                        .WithMany("Items")
                        .HasForeignKey("FacturationId");

                    b.HasOne("back2Front.Models.Item", null)
                        .WithMany("Items")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("back2Front.Models.Projet", b =>
                {
                    b.HasOne("back2Front.Models.Structure", null)
                        .WithMany("Projets")
                        .HasForeignKey("StructureId");
                });

            modelBuilder.Entity("back2Front.Models.ProjetContact", b =>
                {
                    b.HasOne("back2Front.Models.Contact", "Contact")
                        .WithMany("Projets")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back2Front.Models.Projet", "Projet")
                        .WithMany("Contacts")
                        .HasForeignKey("ProjetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back2Front.Models.Secteur", b =>
                {
                    b.HasOne("back2Front.Models.Structure", null)
                        .WithMany("Secteurs")
                        .HasForeignKey("StructureId");
                });

            modelBuilder.Entity("back2Front.Models.StructureContact", b =>
                {
                    b.HasOne("back2Front.Models.Contact", "Contact")
                        .WithMany("Structures")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("back2Front.Models.Structure", "Structure")
                        .WithMany("Contacts")
                        .HasForeignKey("StructureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("back2Front.Models.Telephone", b =>
                {
                    b.HasOne("back2Front.Models.Secteur", null)
                        .WithMany("Telephones")
                        .HasForeignKey("SecteurId");
                });
#pragma warning restore 612, 618
        }
    }
}
